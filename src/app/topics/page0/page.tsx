"use client";

import { useState, useEffect, ReactNode } from "react";
import { useRouter } from "next/navigation";
import { auth, db } from "@/lib/firebase";
import {
  doc,
  updateDoc,
  getDoc,
  setDoc,
  increment,
} from "firebase/firestore";

interface Task {
  title: string;
  description: string;
  content: ReactNode;
  answer: ReactNode;
}

export default function OkuSauatPage() {
  const [openTask, setOpenTask] = useState<number | null>(null);
  const [completed, setCompleted] = useState<Record<number, boolean>>({});
  const [showAnswer, setShowAnswer] = useState<Record<number, boolean>>({});
  const [loading, setLoading] = useState(true);

  const router = useRouter();

  // üîπ Firestore-–¥–∞–Ω –ø–∞–π–¥–∞–ª–∞–Ω—É—à—ã–Ω—ã“£ –∞—è“õ—Ç–∞–ª“ì–∞–Ω —Ç–∞–ø—Å—ã—Ä–º–∞–ª–∞—Ä—ã–Ω –∂“Ø–∫—Ç–µ—É
  useEffect(() => {
    const fetchCompleted = async () => {
      const user = auth.currentUser;
      if (!user) return;

      const userRef = doc(db, "users", user.uid);
      const snap = await getDoc(userRef);
      if (snap.exists()) {
        const data = snap.data();
        if (data.completedTasksList) {
          setCompleted(data.completedTasksList);
        }
      }
      setLoading(false);
    };

    fetchCompleted();
  }, []);

  const handleClick = () => {
    router.push("/topics/page1");
  };

  const toggleTask = (index: number) => {
    setOpenTask(openTask === index ? null : index);
  };

  const handleCheck = async (index: number) => {
    setShowAnswer((prev) => ({ ...prev, [index]: !prev[index] }));

    const user = auth.currentUser;
    if (!user) {
      alert("–ö—ñ—Ä—É “õ–∞–∂–µ—Ç!");
      router.push("/auth/sign_in");
      return;
    }

    const userRef = doc(db, "users", user.uid);

    try {
      const snap = await getDoc(userRef);
      let userData = {};

      if (snap.exists()) {
        userData = snap.data();
      }

      // –ï–≥–µ—Ä –±“±—Ä—ã–Ω –±“±–ª —Ç–∞–ø—Å—ã—Ä–º–∞ –∞—è“õ—Ç–∞–ª–º–∞—Å–∞ ‚Äî —Å–∞“õ—Ç–∞–π–º—ã–∑
      if (!completed[index]) {
        const updatedCompleted = { ...completed, [index]: true };

        await updateDoc(userRef, {
          completedTasks: increment(1),
          completedTasksList: updatedCompleted,
        });

        setCompleted(updatedCompleted);
      }
    } catch (err) {
      console.error("‚ö†Ô∏è Firestore “õ–∞—Ç–µ—Å—ñ:", err);
    }
  };

  // üîπ –ù”ô—Ç–∏–∂–µ–ª–µ—Ä–¥—ñ —Ç–∞–∑–∞—Ä—Ç—É —Ñ—É–Ω–∫—Ü–∏—è—Å—ã
  const handleResetResults = async () => {
    const user = auth.currentUser;
    if (!user) {
      alert("–ö—ñ—Ä—É “õ–∞–∂–µ—Ç!");
      router.push("/auth/sign_in");
      return;
    }

    const userRef = doc(db, "users", user.uid);

    try {
      await updateDoc(userRef, {
        completedTasks: 0,
        completedTasksList: {},
      });

      setCompleted({});
      setShowAnswer({});
      alert("–ë–∞—Ä–ª—ã“õ –Ω”ô—Ç–∏–∂–µ–ª–µ—Ä —Ç–∞–∑–∞—Ä—Ç—ã–ª–¥—ã ‚úÖ");
    } catch (err) {
      console.error("‚ö†Ô∏è –¢–∞–∑–∞–ª–∞—É –∫–µ–∑—ñ–Ω–¥–µ “õ–∞—Ç–µ:", err);
    }
  };

 const tasks: Task[] = [
    {
      title: "1-—Ç–∞–ø—Å—ã—Ä–º–∞: –ê“õ–ø–∞—Ä–∞—Ç—Ç—ã“£ —Å–µ–Ω—ñ–º–¥—ñ–ª—ñ–≥—ñ–Ω –±–∞“ì–∞–ª–∞",
      description:
        "”®–Ω—ñ–º “õ–∞–ø—Ç–∞–º–∞—Å—ã–Ω–∞–Ω “õ–∞–∂–µ—Ç—Ç—ñ –º”ô–ª—ñ–º–µ—Ç—Ç–µ—Ä–¥—ñ —Ç–∞—É—ã–ø, –∫–µ—Å—Ç–µ–Ω—ñ —Ç–æ–ª—Ç—ã—Ä. ”ò—Ä –¥–µ—Ä–µ–∫–∫–µ —Å–µ–Ω—ñ–º –¥–µ“£–≥–µ–π—ñ–Ω (0‚Äì10) “õ–æ–π.",
      content: (
        <table className="w-full border mt-3 text-sm">
          <thead>
            <tr className="bg-gray-100">
              <th className="border p-2">‚Ññ</th>
              <th className="border p-2">–ú”ô–ª—ñ–º–µ—Ç —Ç“Ø—Ä—ñ</th>
              <th className="border p-2">“ö–∞–ø—Ç–∞–º–∞–¥–∞–Ω —Ç–∞–±—ã–ª“ì–∞–Ω –∞“õ–ø–∞—Ä–∞—Ç</th>
              <th className="border p-2">–°–µ–Ω—ñ–º –¥–µ“£–≥–µ–π—ñ (0‚Äì10)</th>
            </tr>
          </thead>
          <tbody>
            {[
              "”®–Ω—ñ–º –∞—Ç–∞—É—ã",
              "–ú–∞–π —Ç“Ø—Ä—ñ",
              "”®–Ω–¥—ñ—Ä—É—à—ñ –µ–ª—ñ–Ω—ñ“£ –∫–æ–¥—ã",
              "”®–Ω—ñ–º –∫”©–ª–µ–º—ñ",
              "”®–Ω–¥—ñ—Ä—ñ—Å —Ç”ô—Å—ñ–ª—ñ",
              "–ñ–∞—Ä–∞–º–¥—ã–ª—ã“õ –º–µ—Ä–∑—ñ–º—ñ",
            ].map((item, i) => (
              <tr key={i}>
                <td className="border p-2 text-center">{i + 1}</td>
                <td className="border p-2">{item}</td>
                <td className="border p-2">
                  <input className="w-full border rounded p-1" />
                </td>
                <td className="border p-2 text-center">
                  <input
                    type="number"
                    className="w-16 border rounded text-center p-1"
                    min={0}
                    max={10}
                  />
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      ),
      answer: (
        <ul className="list-disc ml-5 mt-2 text-sm">
          <li>”®–Ω—ñ–º –∞—Ç–∞—É—ã: ‚Äú–ñ–µ–ª–∞–Ω–Ω–æ–µ‚Äù –∫“Ø–Ω–±–∞“ì—ã—Å –º–∞–π—ã</li>
          <li>–ú–∞–π —Ç“Ø—Ä—ñ: –†–∞—Ñ–∏–Ω–∞–¥—Ç–∞–ª“ì–∞–Ω, –¥–µ–∑–æ–¥–æ—Ä–∏—Ä–ª–µ–Ω–≥–µ–Ω</li>
          <li>”®–Ω–¥—ñ—Ä—É—à—ñ –µ–ª—ñ–Ω—ñ“£ –∫–æ–¥—ã: KZ</li>
          <li>”®–Ω—ñ–º –∫”©–ª–µ–º—ñ: 1 –ª–∏—Ç—Ä</li>
          <li>”®–Ω–¥—ñ—Ä—ñ—Å —Ç”ô—Å—ñ–ª—ñ: –•–æ–ª–æ–¥–Ω—ã–π –æ—Ç–∂–∏–º</li>
          <li>–ñ–∞—Ä–∞–º–¥—ã–ª—ã“õ –º–µ—Ä–∑—ñ–º—ñ: 12 –∞–π</li>
        </ul>
      ),
    },
    {
      title: "2-—Ç–∞–ø—Å—ã—Ä–º–∞: –°—Ü–µ–Ω–∞—Ä–∏–π–ª—ñ–∫ –æ–π–ª–∞–Ω—É (–ö–≤–∞–¥—Ä–∞–Ω—Ç ”ô–¥—ñ—Å—ñ)",
      description:
        "–°–∏—Ç—É–∞—Ü–∏—è: –°–µ–Ω –¥“Ø–∫–µ–Ω–≥–µ –±–∞—Ä—ã–ø, –∞–Ω–∞“£ “Ø—à—ñ–Ω –∫“Ø–Ω–±–∞“ì—ã—Å –º–∞–π—ã–Ω –∞–ª—É—ã“£ –∫–µ—Ä–µ–∫. –¢”©—Ä—Ç —ã“õ—Ç–∏–º–∞–ª —Å—Ü–µ–Ω–∞—Ä–∏–π–¥—ñ “õ–∞—Ä–∞—Å—Ç—ã—Ä.",
      content: (
        <div className="mt-2">
          <p>
            <b>–ñ–∞—É–∞–ø —Å“±—Ä–∞“õ—Ç–∞—Ä—ã:</b>
          </p>
          <p>1. –°–µ–Ω “õ–∞–π –º–∞–π–¥—ã —Ç–∞“£–¥–∞–π—Å—ã“£? –ù–µ–≥–µ?</p>
          <textarea className="w-full border rounded p-2 mt-1" />
          <p className="mt-3">2. ‚Äú–•–æ–ª–æ–¥–Ω—ã–π –æ—Ç–∂–∏–º‚Äù –±–µ–ª–≥—ñ—Å—ñ–Ω—ñ“£ –º–∞“£—ã–∑—ã “õ–∞–Ω–¥–∞–π?</p>
          <textarea className="w-full border rounded p-2 mt-1" />
        </div>
      ),
      answer: (
        <div className="mt-2 text-sm">
          <p>
            <b>“Æ–ª–≥—ñ –∂–∞—É–∞–ø:</b> –ú–µ–Ω ‚Äú—Ö–æ–ª–æ–¥–Ω—ã–π –æ—Ç–∂–∏–º‚Äù –±–∞—Ä –º–∞–π–¥—ã —Ç–∞“£–¥–∞–π–º—ã–Ω, —Å–µ–±–µ–±—ñ
            –æ–ª —Ç–∞–±–∏“ì–∏ –∂”ô–Ω–µ –ø–∞–π–¥–∞–ª—ã –º–∞–π “õ—ã—à“õ—ã–ª–¥–∞—Ä—ã–Ω —Å–∞“õ—Ç–∞–π–¥—ã. –ë“±–ª –º–∞–π–¥—ã“£
            —Å–∞–ø–∞—Å—ã –∂–æ“ì–∞—Ä—ã, –¥–µ–Ω—Å–∞—É–ª—ã“õ“õ–∞ –ø–∞–π–¥–∞–ª—ã.
          </p>
          <p className="mt-1">
            ‚Äú–•–æ–ª–æ–¥–Ω—ã–π –æ—Ç–∂–∏–º‚Äù ‚Äì –º–∞–π–¥—ã “õ—ã–∑–¥—ã—Ä–º–∞–π —Å—ã“ì—É ”ô–¥—ñ—Å—ñ, —Å–æ–Ω–¥—ã“õ—Ç–∞–Ω ”©–Ω—ñ–º–Ω—ñ“£
            –≤–∏—Ç–∞–º–∏–Ω–¥–µ—Ä—ñ –º–µ–Ω –¥”ô–º—ñ –∂–∞“õ—Å—ã —Å–∞“õ—Ç–∞–ª–∞–¥—ã.
          </p>
        </div>
      ),
    },
    {
      title: "3-—Ç–∞–ø—Å—ã—Ä–º–∞: –ñ–∞—Å—ã—Ä—ã–Ω –∞“õ–ø–∞—Ä–∞—Ç—Ç–∞—Ä–¥—ã –±–∞–π–ª–∞–Ω—ã—Å—Ç—ã—Ä",
      description:
        "”®–Ω—ñ–º “õ–∞–ø—Ç–∞–º–∞—Å—ã–Ω–∞–Ω —Ç”©–º–µ–Ω–¥–µ–≥—ñ –∞“õ–ø–∞—Ä–∞—Ç—Ç–∞—Ä–¥—ã —Ç–∞–ø –∂”ô–Ω–µ –æ–ª–∞—Ä–¥—ã“£ –∞—Ä–∞—Å—ã–Ω–¥–∞“ì—ã –±–∞–π–ª–∞–Ω—ã—Å—Ç—ã –∞–Ω—ã“õ—Ç–∞.",
      content: (
        <ul className="list-disc ml-5 mt-2 text-sm">
          <li>–°–∞“õ—Ç–∞—É —à–∞—Ä—Ç—Ç–∞—Ä—ã: ______________________</li>
          <li>–≠–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞–ª—ã“õ “õ“±–Ω–¥—ã–ª—ã“ì—ã: ______________________</li>
          <li>–ì–ú–û –±–∞—Ä –º–∞?: ______________________</li>
          <li>”®“£–¥–µ—É —Ç”ô—Å—ñ–ª—ñ: ______________________</li>
          <li>”®–Ω–¥—ñ—Ä—É—à—ñ –∫–æ–º–ø–∞–Ω–∏—è –∞—Ç–∞—É—ã: ______________________</li>
        </ul>
      ),
      answer: (
        <div className="mt-2 text-sm">
          <p>
            <b>–ú—ã—Å–∞–ª –±–∞–π–ª–∞–Ω—ã—Å—Ç–∞—Ä:</b>
          </p>
          <ul className="list-disc ml-5">
            <li>–°–∞“õ—Ç–∞—É —à–∞—Ä—Ç—Ç–∞—Ä—ã ‚Üí –∂–∞—Ä–∞–º–¥—ã–ª—ã“õ –º–µ—Ä–∑—ñ–º—ñ–Ω–µ ”ô—Å–µ—Ä –µ—Ç–µ–¥—ñ</li>
            <li>”®“£–¥–µ—É —Ç”ô—Å—ñ–ª—ñ ‚Üí —Å–∞–ø–∞ –º–µ–Ω —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞–ª—ã“õ “õ“±–Ω–¥—ã–ª—ã“õ“õ–∞ ”ô—Å–µ—Ä –µ—Ç–µ–¥—ñ</li>
            <li>–ì–ú–û ‚Üí –¥–µ–Ω—Å–∞—É–ª—ã“õ“õ–∞ —ã“õ—Ç–∏–º–∞–ª ”ô—Å–µ—Ä</li>
          </ul>
        </div>
      ),
    },
    {
      title: "4-—Ç–∞–ø—Å—ã—Ä–º–∞: “ö–∞—Ç–µ –∞“õ–ø–∞—Ä–∞—Ç—Ç—ã —Ç–∞–ø!",
      description:
        "–ú”ô–ª—ñ–º–¥–µ–º–µ–ª–µ—Ä–¥—ñ“£ —Å–µ–Ω—ñ–º–¥—ñ–ª—ñ–≥—ñ–Ω –±–∞“ì–∞–ª–∞. –ï“£ —Ç”©–º–µ–Ω –±–∞–ª–ª –∂–∏–Ω–∞“ì–∞–Ω ‚Äî “õ–∞—Ç–µ –º”ô–ª—ñ–º–¥–µ–º–µ.",
      content: (
        <div className="mt-2 text-sm">
          <ol className="list-decimal ml-5">
            <li>”®–Ω—ñ–º–Ω—ñ“£ –∫”©–ª–µ–º—ñ ‚Äî 5 –ª–∏—Ç—Ä.</li>
            <li>”®–Ω—ñ–º —Å—É—ã“õ —Å—ã“ì—ã–º–¥–∞—É ”ô–¥—ñ—Å—ñ–º–µ–Ω ”©–Ω–¥—ñ—Ä—ñ–ª–≥–µ–Ω.</li>
            <li>–ë“±–ª –º–∞–π–¥—ã“£ “õ“±—Ä–∞–º—ã–Ω–¥–∞ –ì–ú–û –±–∞—Ä.</li>
            <li>”®–Ω—ñ–º “ö–∞–∑–∞“õ—Å—Ç–∞–Ω–¥–∞ ”©–Ω–¥—ñ—Ä—ñ–ª–≥–µ–Ω.</li>
          </ol>
          <p className="mt-2">
            ”ò—Ä –º”ô–ª—ñ–º–¥–µ–º–µ–≥–µ 0‚Äì10 –±–∞–ª–ª –∞—Ä–∞–ª—ã“ì—ã–Ω–¥–∞ “Ø—à ”©–ª—à–µ–º –±–æ–π—ã–Ω—à–∞ –±–∞“ì–∞ “õ–æ–π:
            –¥”ô–π–µ–∫—Ç—ñ–ª—ñ–∫, —Å”ô–π–∫–µ—Å—Ç—ñ–∫, –º–∞“õ—Å–∞—Ç.
          </p>
        </div>
      ),
      answer: (
        <div className="mt-2 text-sm">
          <p>
            <b>“ö–∞—Ç–µ –º”ô–ª—ñ–º–¥–µ–º–µ:</b> ”®–Ω—ñ–º–Ω—ñ“£ –∫”©–ª–µ–º—ñ ‚Äî 5 –ª–∏—Ç—Ä.
          </p>
          <p>
            <b>–î”ô–ª–µ–ª:</b> “ö–∞–ø—Ç–∞–º–∞–¥–∞ –Ω–∞“õ—Ç—ã ‚Äú1 –ª‚Äù –¥–µ–ø –∂–∞–∑—ã–ª“ì–∞–Ω. –°–æ–Ω–¥—ã“õ—Ç–∞–Ω –±“±–ª
            –∞“õ–ø–∞—Ä–∞—Ç —Å”ô–π–∫–µ—Å –∫–µ–ª–º–µ–π–¥—ñ.
          </p>
        </div>
      ),
    },
    {
      title: "5-—Ç–∞–ø—Å—ã—Ä–º–∞: –ñ–∞—Ä–Ω–∞–º–∞ –∂–∞—Å–∞",
      description:
        "–°–µ–Ω –¥“Ø–∫–µ–Ω–¥–µ —Å–∞—Ç—É—à—ã—Å—ã“£. –ö–ª–∏–µ–Ω—Ç—Ç—ñ “õ—ã–∑—ã“õ—Ç—ã—Ä—É “Ø—à—ñ–Ω –æ—Å—ã –º–∞–π“ì–∞ –∂–∞—Ä–Ω–∞–º–∞ –∂–∞—Å–∞.",
      content: (
        <div className="mt-2">
          <p>1. ”®–Ω—ñ–º–Ω—ñ“£ 3 –∞—Ä—Ç—ã“õ—à—ã–ª—ã“ì—ã–Ω –∂–∞–∑:</p>
          <textarea className="w-full border rounded p-2 mt-1" />
          <p className="mt-3">2. “∞—Ä–∞–Ω (—Å–ª–æ–≥–∞–Ω) –æ–π–ª–∞–ø —Ç–∞–ø:</p>
          <input className="w-full border rounded p-2 mt-1" />
          <p className="mt-3">3. 30 —Å–µ–∫—É–Ω–¥—Ç—ã“õ –∂–∞—Ä–Ω–∞–º–∞ –º”ô—Ç—ñ–Ω—ñ–Ω –∂–∞–∑:</p>
          <textarea className="w-full border rounded p-2 mt-1" />
        </div>
      ),
      answer: (
        <div className="mt-2 text-sm">
          <p>
            <b>–ú—ã—Å–∞–ª:</b>
          </p>
          <ul className="list-disc ml-5">
            <li>–ê—Ä—Ç—ã“õ—à—ã–ª—ã“õ—Ç–∞—Ä: —Ç–∞–±–∏“ì–∏, –ø–∞–π–¥–∞–ª—ã, —Å–∞–ø–∞–ª—ã ”©“£–¥–µ–ª–≥–µ–Ω</li>
            <li>“∞—Ä–∞–Ω: ‚Äú–¢–∞–±–∏“ì–∞—Ç –¥”ô–º—ñ–Ω —Å–µ–∑—ñ–Ω!‚Äù</li>
            <li>
              –ñ–∞—Ä–Ω–∞–º–∞ –º”ô—Ç—ñ–Ω—ñ: ‚Äú–ñ–µ–ª–∞–Ω–Ω–æ–µ ‚Äî –¥–µ–Ω—Å–∞—É–ª—ã“õ –ø–µ–Ω –¥”ô–º “Ø–π–ª–µ—Å—ñ–º—ñ. ”ò—Ä —Ç–∞–º—à—ã
              —Ç–∞–±–∏“ì–∞—Ç—Ç—ã“£ —Å—ã–π—ã!‚Äù
            </li>
          </ul>
        </div>
      ),
    },
  ];

  if (loading) {
    return <p className="text-center mt-10">–ñ“Ø–∫—Ç–µ–ª—ñ–ø –∂–∞—Ç—ã—Ä...</p>;
  }

  return (
    <div className="max-w-4xl mx-auto p-6">
      <h1 className="text-2xl font-bold text-center mb-6">
        –û“õ—É —Å–∞—É–∞—Ç—Ç—ã–ª—ã“ì—ã–Ω –¥–∞–º—ã—Ç—É“ì–∞ –∞—Ä–Ω–∞–ª“ì–∞–Ω –∂“±–º—ã—Å –ø–∞—Ä–∞“ì—ã
      </h1>

      {tasks.map((task, index) => (
        <div
          key={index}
          className="border rounded-2xl mb-4 shadow-sm overflow-hidden"
        >
          <button
            onClick={() => toggleTask(index)}
            className={`w-full text-left px-5 py-3 font-semibold flex justify-between items-center ${
              completed[index]
                ? "bg-green-100 hover:bg-green-200"
                : "bg-gray-100 hover:bg-gray-200"
            }`}
          >
            <span>
              {task.title}{" "}
              {completed[index] && (
                <span className="ml-2 text-green-600 font-bold">‚úÖ</span>
              )}
            </span>
          </button>

          {openTask === index && (
            <div className="p-5">
              <p className="text-gray-700 text-sm">{task.description}</p>
              <div className="mt-3">{task.content}</div>

              <button
                onClick={() => handleCheck(index)}
                className="mt-4 bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700"
              >
                –¢–µ–∫—Å–µ—Ä—É
              </button>

              {showAnswer[index] && (
                <div className="mt-4 p-3 border-l-4 border-green-500 bg-green-50">
                  <p className="font-semibold mb-1">–î“±—Ä—ã—Å –∂–∞—É–∞–ø “Ø–ª–≥—ñ—Å—ñ:</p>
                  {task.answer}
                </div>
              )}
            </div>
          )}
        </div>
      ))}

      <div className="flex justify-center gap-4 mt-8">
        <button
          onClick={handleClick}
          className="bg-gray-700 text-white px-6 py-2 rounded-lg hover:bg-gray-800 transition"
        >
          üîÑ –¢–∞–ø—Å—ã—Ä–º–∞–ª–∞—Ä–¥—ã –∂–∞“£–∞—Ä—Ç—É
        </button>

        <button
          onClick={handleResetResults}
          className="bg-red-600 text-white px-6 py-2 rounded-lg hover:bg-red-700 transition"
        >
          üßπ –ù”ô—Ç–∏–∂–µ–ª–µ—Ä–¥—ñ —Ç–∞–∑–∞—Ä—Ç—É
        </button>
      </div>
    </div>
  );
}
