"use client";

import { useState, useRef, useEffect } from "react";

type Message = {
  role: "user" | "assistant";
  content: string;
};

const qaPairs = [
  {
    question: "–ê–±–∞–π “ö“±–Ω–∞–Ω–±–∞–π“±–ª—ã –∫—ñ–º?",
    answer:
      "–ê–±–∞–π “ö“±–Ω–∞–Ω–±–∞–π“±–ª—ã ‚Äî “õ–∞–∑–∞“õ—Ç—ã“£ “±–ª—ã –∞“õ—ã–Ω—ã, —Ñ–∏–ª–æ—Å–æ—Ñ—ã –∂”ô–Ω–µ –∞“ì–∞—Ä—Ç—É—à—ã—Å—ã. –û–ª “õ–∞–∑–∞“õ ”ô–¥–µ–±–∏ —Ç—ñ–ª—ñ–Ω –¥–∞–º—ã—Ç—É“ì–∞ –∑–æ—Ä “Ø–ª–µ—Å “õ–æ—Å—ã–ø, ”©–∑ —à—ã“ì–∞—Ä–º–∞–ª–∞—Ä—ã–Ω–¥–∞ –∞–¥–∞–º–≥–µ—Ä—à—ñ–ª—ñ–∫, –±—ñ–ª—ñ–º –º–µ–Ω –µ“£–±–µ–∫—Ç—ñ“£ –º–∞“£—ã–∑—ã–Ω –¥”ô—Ä—ñ–ø—Ç–µ–≥–µ–Ω.",
  },
  {
    question: "¬´“ö–∞—Ä–∞ —Å”©–∑–¥–µ—Ä¬ª —Ç—É—Ä–∞–ª—ã –∞–π—Ç—ã–ø –±–µ—Ä—à—ñ.",
    answer:
      "¬´“ö–∞—Ä–∞ —Å”©–∑–¥–µ—Ä¬ª ‚Äî –ê–±–∞–π–¥—ã“£ —Ñ–∏–ª–æ—Å–æ—Ñ–∏—è–ª—ã“õ –µ“£–±–µ–∫—Ç–µ—Ä—ñ –∂–∏–Ω–∞“ì—ã. –û–Ω–¥–∞ ”©–º—ñ—Ä–¥—ñ“£ –º”ô–Ω—ñ, –∞–¥–∞–º –±–æ–ª–º—ã—Å—ã, –∏–º–∞–Ω–¥—ã–ª—ã“õ, –±—ñ–ª—ñ–º, “õ–æ“ì–∞–º –º”ô—Å–µ–ª–µ–ª–µ—Ä—ñ —Ç–µ—Ä–µ“£ —Ç–∞–ª–¥–∞–Ω–∞–¥—ã.",
  },
  {
    question: "–ú“±—Ö—Ç–∞—Ä ”ò—É–µ–∑–æ–≤ –∫—ñ–º?",
    answer:
      "–ú“±—Ö—Ç–∞—Ä ”ò—É–µ–∑–æ–≤ ‚Äî “õ–∞–∑–∞“õ ”ô–¥–µ–±–∏–µ—Ç—ñ–Ω—ñ“£ –∫–ª–∞—Å—Å–∏–≥—ñ, –¥—Ä–∞–º–∞—Ç—É—Ä–≥, “ì–∞–ª—ã–º –∂”ô–Ω–µ “õ–æ“ì–∞–º “õ–∞–π—Ä–∞—Ç–∫–µ—Ä—ñ. –û–Ω—ã“£ –µ“£ –∞—Ç–∞“õ—Ç—ã —Ç—É—ã–Ω–¥—ã—Å—ã ‚Äî ¬´–ê–±–∞–π –∂–æ–ª—ã¬ª —ç–ø–æ–ø–µ—è—Å—ã.",
  },
  {
    question: "–ú–∞–≥–∂–∞–Ω –ñ“±–º–∞–±–∞–µ–≤ —Ç—É—Ä–∞–ª—ã –Ω–µ –±—ñ–ª–µ—Å—ñ“£?",
    answer:
      "–ú–∞“ì–∂–∞–Ω –ñ“±–º–∞–±–∞–µ–≤ ‚Äî “õ–∞–∑–∞“õ—Ç—ã“£ –∫”©—Ä–Ω–µ–∫—Ç—ñ –∞“õ—ã–Ω—ã, –ê–ª–∞—à “õ–æ–∑“ì–∞–ª—ã—Å—ã–Ω—ã“£ –º“Ø—à–µ—Å—ñ. –û–Ω—ã“£ –ø–æ—ç–∑–∏—è—Å—ã —Å–µ–∑—ñ–º–≥–µ, –æ—Ç–∞–Ω—à—ã–ª–¥—ã“õ“õ–∞ –∂”ô–Ω–µ —Ä—É—Ö–∞–Ω–∏ –µ—Ä–∫—ñ–Ω–¥—ñ–∫–∫–µ —Ç–æ–ª—ã.",
  },
];

export default function ChatPage() {
  const [messages, setMessages] = useState<Message[]>([]);
  const [loading, setLoading] = useState(false);
  const chatEndRef = useRef<HTMLDivElement>(null);

  useEffect(() => {
    chatEndRef.current?.scrollIntoView({ behavior: "smooth" });
  }, [messages]);

  const handleQuestionClick = async (question: string, answer: string) => {
    const userMessage: Message = { role: "user", content: question };
    setMessages((prev) => [...prev, userMessage]);
    setLoading(true);

    // –ò–º–∏—Ç–∞—Ü–∏—è –ñ–ò –æ–π–ª–∞–ø –∂–∞—Ç“õ–∞–Ω–¥–∞–π –∫—ñ–¥—ñ—Ä—ñ—Å –∂–∞—Å–∞–π–º—ã–∑ ‚è≥
    setTimeout(() => {
      const aiMessage: Message = { role: "assistant", content: answer };
      setMessages((prev) => [...prev, aiMessage]);
      setLoading(false);
    }, 1500);
  };

  return (
    <main className="min-h-screen flex flex-col bg-gradient-to-br from-orange-50 via-amber-100 to-yellow-50 text-gray-800">
      <h1 className="text-2xl md:text-3xl font-bold text-center py-4 text-amber-700">
        üí¨ “ö–∞–∑–∞“õ ”ô–¥–µ–±–∏–µ—Ç—ñ ‚Äî –ñ–ò –∫”©–º–µ–∫—à—ñ—Å—ñ
      </h1>

      {/* üìö –î–∞–π—ã–Ω —Å“±—Ä–∞“õ—Ç–∞—Ä */}
      <div className="flex flex-wrap justify-center gap-2 px-4 mb-2">
        {qaPairs.map((q, i) => (
          <button
            key={i}
            onClick={() => handleQuestionClick(q.question, q.answer)}
            className="px-4 py-2 bg-amber-200 hover:bg-amber-300 rounded-full text-sm md:text-base text-amber-900 font-medium shadow-sm transition"
          >
            {q.question}
          </button>
        ))}
      </div>

      {/* üí¨ –ß–∞—Ç –∞–π–º–∞“ì—ã */}
      <div className="flex-1 overflow-y-auto px-4 md:px-8 py-4 space-y-4">
        {messages.map((msg, i) => (
          <div
            key={i}
            className={`flex ${
              msg.role === "user" ? "justify-end" : "justify-start"
            }`}
          >
            <div
              className={`max-w-[80%] p-3 md:p-4 rounded-2xl shadow ${
                msg.role === "user"
                  ? "bg-amber-300 text-amber-900 rounded-br-none"
                  : "bg-white text-gray-800 rounded-bl-none border border-amber-100"
              }`}
            >
              {msg.content}
            </div>
          </div>
        ))}

        {loading && (
          <div className="flex justify-start">
            <div className="bg-white text-gray-500 p-3 md:p-4 rounded-2xl shadow border border-amber-100 animate-pulse">
              –ñ–∞—É–∞–ø –∂–∞–∑—ã–ª—ã–ø –∂–∞—Ç—ã—Ä...
            </div>
          </div>
        )}

        <div ref={chatEndRef} />
      </div>
    </main>
  );
}
